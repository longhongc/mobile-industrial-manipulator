<?xml version="1.0"?>
<launch>

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="paused" value="true"/>
    <arg name="gui" value="true"/> 
  </include>

  <!-- diffdrive -->
  <group ns="mim_diffdrive_arm">
    <arg name="diffdrive_init_pose" value="-x 0 -y -1 -z 0 -R 0 -P 0 -Y 0"/>
    <param name="robot_description" command="$(find xacro)/xacro $(find mim_robots)/urdf/diffdrive_arm.xacro"/>
    <node pkg="gazebo_ros" type="spawn_model" name="spawn_model_diffdrive" args="$(arg diffdrive_init_pose) -param robot_description -urdf -model mim_diffdrive_arm" />

    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen" >
      <param name="publish_frequency" value="40.0"/>
    </node>

    <rosparam command="load" 
      file="$(find mim_robots)/config/diffdrive.yaml"/>
    <rosparam command="load" 
      file="$(find mim_robots)/config/arm.yaml"/>

    <node name="diffdrive_controller_manager" pkg="controller_manager" type="spawner"
      respawn="false" output="screen" 
      args="mim_diffdrive/mobile_base_controller
            mim_arm/joint1_controller 
            mim_arm/joint2_controller 
            mim_arm/joint3_controller 
            mim_arm/joint4_controller 
            mim_arm/joint5_controller 
            mim_arm/gripper_controller" />
  </group>

  <!-- rocker_boggie -->
  <group ns="mim_rockerb_arm">
    <arg name="init_pose" value="-x 0 -y 1 -z 0 -R 0 -P 0 -Y 0"/>
    <param name="robot_description" command="$(find xacro)/xacro $(find mim_robots)/urdf/rockerb_arm.xacro"/>
    <node pkg="gazebo_ros" type="spawn_model" name="spawn_model_rockerb" args="$(arg init_pose) -param robot_description -urdf -model mim_rockerb_arm"/> 
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen" >
      <param name="publish_frequency" value="40.0"/>
    </node>

    <rosparam command="load"
      file="$(find mim_robots)/config/rockerb.yaml"/>
    <rosparam command="load" 
      file="$(find mim_robots)/config/arm.yaml"/>

    <node name="rockerb_controller_manager" pkg="controller_manager" type="spawner"
      respawn="false" output="screen"  
      args="mim_rockerb/mobile_base_controller
            mim_arm/joint1_controller 
            mim_arm/joint2_controller 
            mim_arm/joint3_controller 
            mim_arm/joint4_controller 
            mim_arm/joint5_controller 
            mim_arm/gripper_controller" />
  </group>

  <!-- ramp -->
  <arg name="ramp1_init_pose" value="-x 1 -y 1.5 -z 0 -R 0 -P 0 -Y 0"/>
  <param name="ramp1_description" command="$(find xacro)/xacro $(find mim_robots)/urdf/other_models/ramp.urdf"/>

  <node pkg="gazebo_ros" type="spawn_model" name="spawn_model_ramp1" args="$(arg ramp1_init_pose) -param ramp1_description -urdf -model ramp1"/> 

  <!-- ramp -->
  <arg name="ramp2_init_pose" value="-x 1 -y -0.5 -z 0 -R 0 -P 0 -Y 0"/>
  <param name="ramp2_description" command="$(find xacro)/xacro $(find mim_robots)/urdf/other_models/ramp.urdf"/>

  <node pkg="gazebo_ros" type="spawn_model" name="spawn_model_ramp2" args="$(arg ramp2_init_pose) -param ramp2_description -urdf -model ramp2"/> 






<!-- keyboard control 
  <node name="key_control" pkg="warehouse_simulation" type="key_control" respawn="false" output="screen"/>
-->
<!-- Localization 
  <node pkg="gmapping" type="slam_gmapping" name="slam_gmapping" output="log">
    <param name="maxRange" value="10"/>
    <param name="xmin" value="-12"/>
    <param name="ymin" value="-12"/>
    <param name="xmax" value="12"/>
    <param name="ymax" value="12"/>
    <param name="delta" value="0.05"/>
    <param name="particles" value="4"/>
    <param name="temporalUpdate" value="1.0"/>
    <param name="angularUpdate" value="0.3"/>
    <param name="linearUpdate" value="0.3"/>
    <param name="map_update_interval" value="2.0"/>
  </node>
-->

<!-- Navigation 
  <node pkg="move_base" type="move_base" respawn="true" name="move_base" output="screen">

    <rosparam file="$(find warehouse_simulation)/param/move_base_params.yaml" command="load" />
    <rosparam file="$(find warehouse_simulation)/param/costmap_common_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find warehouse_simulation)/param/costmap_common_params.yaml" command="load" ns="local_costmap" />   
    <rosparam file="$(find warehouse_simulation)/param/local_costmap_params.yaml" command="load" />   
    <rosparam file="$(find warehouse_simulation)/param/global_costmap_params.yaml" command="load" />
    <rosparam file="$(find warehouse_simulation)/param/base_local_planner_params.yaml" command="load" />
    <rosparam file="$(find warehouse_simulation)/param/navfn.yaml" command="load" />

    <param name="global_costmap/global_frame" value="map"/>
    <param name="global_costmap/robot_base_frame" value="base_link"/>
    <param name="local_costmap/global_frame" value="odom"/>
    <param name="local_costmap/robot_base_frame" value="base_link"/>

  </node>
-->

<!-- rviz
  <node pkg="rviz" type="rviz" name="rviz" args="-d $(find warehouse_simulation)/rviz/navigation.rviz" output="screen"/>
-->

<!-- trajectory display
  <node pkg="hector_trajectory_server" type="hector_trajectory_server" name="trajectory_server" ns="pioneer" >
    <param name="/target_frame_name" value="map" />
    <param name="/source_frame_name" value="base_link" />
    <param name="/trajectory_update_rate" value="10.0" />
    <param name="/trajectory_publish_rate" value="10.0" />
  </node>
-->

</launch>
